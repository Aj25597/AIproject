import openai
import pandas as pd
from collections import Counter

openai.api_key = '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'

emails_df = pd.read_csv('emails.csv')
original_emails = emails_df['Content']
email_subjects = emails_df['Subject']

tasks = []
common_subjects = []

# Find common subjects
subject_counts = Counter(email_subjects)
for subject, count in subject_counts.most_common():
    if count > 1:
        common_subjects.append(subject)

# Process emails and create tasks
for email, subject in zip(original_emails, email_subjects):
    messages = [
        {"role": "system", "content": "You are a helpful assistant. Convert the following email into a task for a to-do list and suggest a priority level (high, medium, low)."},
        {"role": "user", "content": email}
    ]

    response = openai.ChatCompletion.create(
        model='gpt-3.5-turbo',
        messages=messages,
        max_tokens=200
    )

    task = response['choices'][0]['message']['content']
   
    # Check if the subject is common among the emails
    if subject in common_subjects:
        task += f" [Subject: {subject}]"

    tasks.append(task)

# Now, you have your tasks and the tagged common subjects
for i, task in enumerate(tasks):
    print(f"Task {i+1}: {task}")
    print(" ")

# Interactive loop to ask questions
while True:
    question = input("Enter your question (or 'quit' to exit): ")
    if question.lower() == "quit":
        break
    
    # Add user question to messages
    messages.append({"role": "user", "content": question})

    # Generate AI response
    response = openai.ChatCompletion.create(
        model='gpt-3.5-turbo',
        messages=messages,
        max_tokens=500
    )

    answer = response['choices'][0]['message']['content']
    print("MailFocus:", answer)
    print()
